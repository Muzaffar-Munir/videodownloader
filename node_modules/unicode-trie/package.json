{
  "_args": [
    [
      {
        "raw": "unicode-trie@^0.3.0",
        "scope": null,
        "escapedName": "unicode-trie",
        "name": "unicode-trie",
        "rawSpec": "^0.3.0",
        "spec": ">=0.3.0 <0.4.0",
        "type": "range"
      },
      "C:\\wamp64\\www\\ssc\\node_modules\\fontkit"
    ]
  ],
  "_from": "unicode-trie@>=0.3.0 <0.4.0",
  "_id": "unicode-trie@0.3.1",
  "_inCache": true,
  "_location": "/unicode-trie",
  "_nodeVersion": "4.2.1",
  "_npmUser": {
    "name": "devongovett",
    "email": "devongovett@gmail.com"
  },
  "_npmVersion": "2.14.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "unicode-trie@^0.3.0",
    "scope": null,
    "escapedName": "unicode-trie",
    "name": "unicode-trie",
    "rawSpec": "^0.3.0",
    "spec": ">=0.3.0 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/fontkit",
    "/linebreak",
    "/unicode-properties"
  ],
  "_resolved": "https://registry.npmjs.org/unicode-trie/-/unicode-trie-0.3.1.tgz",
  "_shasum": "d671dddd89101a08bac37b6a5161010602052085",
  "_shrinkwrap": null,
  "_spec": "unicode-trie@^0.3.0",
  "_where": "C:\\wamp64\\www\\ssc\\node_modules\\fontkit",
  "author": {
    "name": "Devon Govett",
    "email": "devongovett@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/devongovett/unicode-trie/issues"
  },
  "dependencies": {
    "pako": "^0.2.5",
    "tiny-inflate": "^1.0.0"
  },
  "description": "Unicode Trie data structure for fast character metadata lookup, ported from ICU",
  "devDependencies": {
    "coffee-coverage": "^0.4.2",
    "coffee-script": "^1.7.1",
    "mocha": "^1.20.1"
  },
  "directories": {},
  "dist": {
    "shasum": "d671dddd89101a08bac37b6a5161010602052085",
    "tarball": "https://registry.npmjs.org/unicode-trie/-/unicode-trie-0.3.1.tgz"
  },
  "gitHead": "0e19655c9c291c133e577bcacd2c25b7c82455f7",
  "homepage": "https://github.com/devongovett/unicode-trie",
  "license": "MIT",
  "maintainers": [
    {
      "name": "devongovett",
      "email": "devongovett@gmail.com"
    }
  ],
  "name": "unicode-trie",
  "optionalDependencies": {},
  "readme": "# unicode-trie\nA data structure for fast Unicode character metadata lookup, ported from ICU\n\n## Background\n\nWhen implementing many Unicode algorithms such as text segmentation,\nnormalization, bidi processing, etc., fast access to character metadata\nis crucial to good performance.  There over a million code points in the\nUnicode standard, many of which produce the same result when looked up,\nso an array or hash table is not appropriate - those data structures are\nfast but would require a lot of memory.  The data is generally\ngrouped in ranges, so you could do a binary search, but that is not\nfast enough for some applications.\n\nThe [International Components for Unicode](http://site.icu-project.org) (ICU) project\ncame up with a data structure based on a [Trie](http://en.wikipedia.org/wiki/Trie) that provides fast access\nto Unicode metadata.  The range data is precompiled to a serialized\nand flattened trie, which is then used at runtime to lookup the necessary\ndata.  According to my own tests, this is generally at least 50% faster\nthan binary search, with not too much additional memory required.\n\n## Installation\n\n    npm install unicode-trie\n\n## Building a Trie\n\nUnicode Tries are generally precompiled from data in the Unicode database\nfor faster runtime performance.  To build a Unicode Trie, use the\n`UnicodeTrieBuilder` class.\n\n```coffeescript\nUnicodeTrieBuilder = require 'unicode-trie/builder'\n\n# create a trie\nt = new UnicodeTrieBuilder\n\n# optional parameters for default value, and error value\n# if not provided, both are set to 0\nt = new UnicodeTrieBuilder 10, 999\n\n# set individual values and ranges\nt.set 0x4567, 99\nt.setRange 0x40, 0xe7, 0x1234\n\n# you can lookup a value if you like\nt.get 0x4567 # => 99\n\n# get a compiled trie (returns a UnicodeTrie object)\ntrie = t.freeze()\n\n# write compressed trie to a binary file\nfs.writeFile 'data.trie', t.toBuffer()\n```\n\n## Using a precompiled Trie\n\nOnce you've built a precompiled trie, you can load it into the\n`UnicodeTrie` class, which is a readonly representation of the\ntrie.  From there, you can lookup values.\n\n```coffeescript\nUnicodeTrie = require 'unicode-trie'\nfs = require 'fs'\n\n# load serialized trie from binary file\ndata = fs.readFileSync 'data.trie'\ntrie = new UnicodeTrie data\n\n# lookup a value\ntrie.get 0x4567 # => 99\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/devongovett/unicode-trie.git"
  },
  "scripts": {
    "postpublish": "make clean",
    "prepublish": "make build",
    "test": "mocha"
  },
  "version": "0.3.1"
}
